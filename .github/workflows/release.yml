name: release

on:
  push:
    tags:
      - 'v*'

env:
  ATOMCODE: ${${{ GITHUB_REPOSITORY }}#${{ GITHUB_ACTOR }}/}

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '2.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: package
      id: release_step
      run: |
        python setup.py sdist
        
        release_time=$(date "+%Y%m%d%H%M%S")
        release_pkg_name=${{ env.ATOMCODE }}-${release_time}-release.zip
        echo "::set-output name=release_pkg_name::$release_pkg_name"
        
        cp task.json dist/
        cd dist        
        zip $release_pkg_name *
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.release_step.outputs.release_pkg_name }}
        # A file, directory or wildcard pattern that describes what to upload
        path: ./dist/${{ steps.release_step.outputs.release_pkg_name }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/${{ steps.release_step.outputs.release_pkg_name }}
        asset_name: ${{ steps.release_step.outputs.release_pkg_name }}
        asset_content_type: application/zip
